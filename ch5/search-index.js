var searchIndex = new Map(JSON.parse('[\
["os",{"t":"HCCHCCCCQQHCCCCCCSSSSSSSSSSFNNNNHNNNNHFONNNNHHHNHNNNFNNNNNHNNNNNFEEFFFFFFFFOCOOOHCCHCCOOHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNNHNNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHNNNNNNNNNNNNSSSSHHHHHFOCFNNNNONNNNNSSSSSSSSSSSSSSSCCHSSHHFFNNNNNNNNNOOHHHHHHHHHHHHHOONNNNNNOSFFFFPPFFFGPPOHHNNCOHHHNHHNCOONOHCOHCOOHOHOHCHCNNNFNNNNNOOONNNNFFFFFOONNNNNNNNNNNONNNNNNNNNNNNNNNNHHNHNONNNNNNNNNNNNNNNFFONHNNNNNNHNNNNNONNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNHPPFFGPPONNNNNNNONNNNONNNNNNNNNOONNNNNOONOOOOONONNNNNNNNNSSSHHHHFCHHOOOHHOHHOHOFNNNNNNOOONOONNNO","n":["clear_bss","config","console","kernel_log_info","lang_items","loader","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MAX_SYSCALL_NUM","MEMORY_END","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","APP_NAMES","__private_field","borrow","borrow_mut","deref","from","get_app_data","get_app_data_by_name","get_num_app","into","list_apps","try_from","try_into","type_id","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","page_table","ppn","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_valid","map","new","new","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","SBI_CONSOLE_GETCHAR","SBI_CONSOLE_PUTCHAR","SBI_SET_TIMER","SBI_SHUTDOWN","console_getchar","console_putchar","sbi_call","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_MMAP","SYSCALL_MUNMAP","SYSCALL_READ","SYSCALL_SBRK","SYSCALL_SET_PRIORITY","SYSCALL_SPAWN","SYSCALL_TASK_INFO","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDIN","FD_STDOUT","sys_read","sys_write","TaskInfo","TimeVal","borrow","borrow","borrow_mut","borrow_mut","fmt","from","from","into","into","sec","status","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_mmap","sys_munmap","sys_sbrk","sys_set_priority","sys_spawn","sys_task_info","sys_waitpid","sys_yield","syscall_times","time","try_from","try_from","try_into","try_into","type_id","type_id","usec","IDLE_PID","INITPROC","KernelStack","PidHandle","Processor","Ready","Running","TaskContext","TaskControlBlock","TaskManager","TaskStatus","UnInit","Zombie","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","fetch_task","from","id","idle_task_cx","inner","into","kernel_stack","kstack_alloc","manager","pid","pid_alloc","processor","ra","ready_queue","run_tasks","s","schedule","sp","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","__private_field","__private_field","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","deref","drop","drop","from","from","from","from","from","get_top","into","into","into","into","into","kernel_stack_position","kstack_alloc","new","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","UnInit","Zombie","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_program_brk","children","clone","clone_into","eq","exec","exit_code","fork","from","from","from","get_status","get_trap_cx","get_user_token","get_user_token","getpid","heap_bottom","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MICRO_PER_SEC","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","get_time_us","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::config"],[27,"os::console"],[37,"os::lang_items"],[38,"os::loader"],[52,"os::logging"],[64,"os::mm"],[92,"os::mm::address"],[213,"os::mm::frame_allocator"],[262,"os::mm::heap_allocator"],[267,"os::mm::memory_set"],[403,"os::mm::page_table"],[504,"os::sbi"],[513,"os::sync"],[516,"os::sync::up"],[527,"os::syscall"],[545,"os::syscall::fs"],[549,"os::syscall::process"],[584,"os::task"],[634,"os::task::context"],[647,"os::task::id"],[703,"os::task::manager"],[727,"os::task::processor"],[757,"os::task::switch"],[758,"os::task::task"],[814,"os::timer"],[821,"os::trap"],[836,"os::trap::context"],[853,"core::fmt"],[854,"core::result"],[855,"core::any"],[856,"core::panic::panic_info"],[857,"alloc::vec"],[858,"core::option"],[859,"log"],[860,"alloc::string"],[861,"core::marker"],[862,"core::cmp"],[863,"core::clone"],[864,"core::alloc::layout"],[865,"alloc::sync"],[866,"core::iter::traits::collect"],[867,"core::hash"],[868,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,10,10,10,10,10,0,0,0,10,0,10,10,10,0,16,16,16,16,16,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,48,0,43,44,35,0,0,0,0,0,0,43,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,37,22,23,24,25,26,37,22,23,24,25,26,22,23,22,23,24,25,26,22,23,24,25,26,22,23,24,25,37,37,22,23,24,25,22,23,22,23,24,25,37,22,22,22,23,23,23,24,24,24,25,25,25,26,24,26,22,24,24,26,25,37,22,23,24,25,26,37,26,76,26,37,26,37,22,23,22,23,24,25,76,26,27,25,22,23,24,25,26,37,22,23,24,25,26,37,22,23,24,25,26,37,22,23,24,25,26,0,0,0,0,0,40,38,39,20,39,40,20,39,40,39,77,38,39,40,20,39,77,20,0,0,0,20,39,40,39,0,20,39,40,38,20,39,20,39,77,20,39,40,20,39,40,20,39,40,0,0,0,0,0,47,47,0,0,0,0,0,44,44,44,44,48,43,44,43,45,43,44,44,44,44,44,44,44,44,43,45,48,47,44,43,45,48,47,44,47,44,47,44,44,44,44,45,45,48,44,0,0,0,44,47,44,0,0,44,47,44,44,44,44,44,43,45,48,47,44,45,44,44,44,43,43,44,44,44,43,44,44,43,45,48,47,44,44,44,45,45,45,43,45,45,43,43,44,43,44,43,43,0,44,43,0,0,44,43,45,0,0,0,44,44,44,47,44,44,43,43,43,45,48,47,44,43,45,48,47,44,43,45,48,47,44,44,45,45,45,54,54,54,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,35,54,54,46,54,35,46,54,35,54,35,54,35,54,54,54,54,54,35,54,35,54,46,46,35,54,54,54,54,54,46,46,54,35,54,54,54,54,46,54,54,54,54,46,54,35,54,54,35,46,46,35,54,54,35,35,54,46,54,54,54,54,54,35,54,46,46,46,0,0,0,46,54,35,46,54,35,46,54,35,54,46,35,0,0,0,0,0,0,0,0,0,0,41,0,0,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,57,59,57,57,59,57,59,57,57,59,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,57,59,57,59,57,57,0,0,0,0,0,74,74,0,0,0,0,74,74,62,0,0,62,62,0,72,0,0,0,62,0,0,62,0,72,60,62,60,0,0,60,0,0,65,70,0,65,0,65,0,0,0,0,62,62,62,0,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,0,67,68,66,66,64,63,67,68,66,64,63,67,68,66,66,67,68,64,63,66,64,63,67,68,63,66,64,63,67,68,0,0,66,0,63,66,66,64,63,67,68,66,64,63,67,68,66,64,63,67,68,0,0,71,70,0,70,71,70,71,71,70,0,70,71,70,71,70,70,70,71,70,71,70,71,0,0,73,72,73,72,73,72,72,0,0,0,73,72,73,72,72,72,73,72,0,0,72,0,72,73,72,73,72,73,0,74,74,0,0,0,74,74,75,60,75,74,60,75,74,60,75,74,74,74,60,75,60,60,75,74,75,75,60,75,60,75,60,60,60,75,74,75,60,75,60,75,60,75,75,75,74,75,60,75,74,60,75,74,60,75,74,0,0,0,0,0,0,0,0,0,0,0,61,61,61,0,0,61,0,0,61,0,61,0,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61],"f":"{{}b}``0``````{{}d}`````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}{Abd}``66{Ad{{Af{n}}}}6{Ah{{Al{Aj}}}}{n{{An{{Al{Aj}}}}}}{{}Ah}:<776`::{{B`Bb}Bd}{B`b};><{{B`Bf}b}::9````````````````{{}{{An{Bh}}}}``{{}b}````0{{AhAjAh}{{Af{{Al{Aj}}}}}}{Ahc{}}{{AhAj}Bj}````````````{BlBd}{BnBd}{ce{}{}}00000000000{BlC`}{BnCb}{BlBl}{BnBn}{C`C`}{CbCb}{{{Cd{c}}}{{Cd{c}}}{CfChCjClCnD`}}{{ce}b{}{}}0000{{BlBl}Db}{{BnBn}Db}{{C`C`}Db}{{CbCb}Db}``{{BlBl}Bd}{{BnBn}Bd}{{C`C`}Bd}{{CbCb}Bd}?>{{BlDd}A`}{{BnDd}A`}{{C`Dd}A`}{{CbDd}A`}{cc{}}{C`Bl}1{AhBl}{AhBn}3{CbBn}{AhC`}5{BlC`}6{BnCb}{AhCb}8{C`{{Al{Aj}}}}{{{Cd{c}}}c{CfChCjClCn}}{Blc{}}{C`c{}}{C`{{Al{Df}}}}3{Cb{{Dh{Ah}}}}{ce{}{}}000000{{{Cd{c}}}e{CfChCjClCn}{}}``{{cc}{{Dj{c}}}{CfChCjClCn}}{{cc}{{Cd{c}}}{CfChCjClCn}}{{{Dj{c}}}{{An{e}}}{CfChCjClCn}{}}{BlAh}{BnAh}{{BlBl}{{An{Db}}}}{{BnBn}{{An{Db}}}}{{C`C`}{{An{Db}}}}{{CbCb}{{An{Db}}}}``{Cfb}{Cbb}<<<<<{c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Dl{{An{C`}}}}{Dn{{An{C`}}}}{ce{}{}}00000``{{DlC`}b}{{DnC`}b}{E`{{Eb{Dn}}}}{Bhb}``{{BhDd}A`}{{}{{An{Bh}}}}{{}b}{C`b}{cc{}}00{{DnC`C`}b}3:::{{}Dl}{C`Bh}{{}Dn}```{c{{h{e}}}{}{}}00000{cj{}}00``{Edd}99````````````{Efb}{{}Eh}{{EfBnBn}Bd}{{EjElCb}b}`{{EhEh}Eh}{{EhEh}b}10{EhAj}`21{ce{}{}}000000000{EnEn}{EhEh}{{ce}b{}{}}0{{EhEh}Db}2{{EhEh}Bd}{{EjEl{Al{Aj}}}b}`{F`{{Fb{{Eb{Ef}}}}}}:```={{EnEn}Bd}3``{{Ehc}b{{Ff{}{{Fd{Eh}}}}}}{{EnDd}A`}{{EhDd}A`}0000{cc{}}0000{EjEj}{Aj{{An{Eh}}}}{AjEh}0{{{Al{Aj}}}{{Fh{EfAhAh}}}}{EfEf}{cEh{{Ff{}{{Fd{Eh}}}}}}{{Ehc}bFj}{{EhEh}b}{{EfBnBnEh}b}{{EhEh}Eh}{{EhEh}Bd}{ce{}{}}0000{EhBd}0{{EjEl}b}{{EjElCb}b}`{Efb}`{{BnBnEnEh}Ej}{{}Ef}0{EhEh}`{{EhEh}{{An{Db}}}}{{EfEj{An{{Al{Aj}}}}}b}5{{}b}>{{EfCb}b}``{{EhEhBd}b}{{EfBnBn}Bd}:```?{{EhEh}b}{{EhEh}Eh}??1{EfAh}{{EfCb}{{An{Df}}}}{c{{h{e}}}{}{}}000000000{cj{}}00004{{EjEl}b}{{EjElCb}b}````````````{{}Fl}{{FlFl}Fl}{{FlFl}b}10{FlAj}``21{ce{}{}}00000{FlFl}{DfDf}{{ce}b{}{}}0{{FlFl}Db}3{{FlFl}Bd}89{{}Df}1{DfBd}{{Flc}b{{Ff{}{{Fd{Fl}}}}}}{{ElCb}{{An{Df}}}}0{DfFl}{{FlDd}A`}0000`{cc{}}00{Aj{{An{Fl}}}}{AjFl}0{cFl{{Ff{}{{Fd{Fl}}}}}}{AhEl}{{Flc}bFj}{{FlFl}b}{{FlFl}Fl}>{ce{}{}}00{FlBd}0>{{ElCbC`Fl}b}{{}El}{{C`Fl}Df}{FlFl}{{FlFl}{{An{Db}}}}{DfC`}{DfBd}:`{{FlFlBd}b}:;:99;{ElAh}{{ElCb}{{An{Df}}}}{{ElBn}{{An{Bl}}}}{{AhAjAh}{{Af{{Al{Aj}}}}}}{Ahc{}}{{AhAj}Bj}{c{{h{e}}}{}{}}00000{cj{}}00{{FlFl}Fl}{{ElCb}b};````{{}Ah}{Ahb}{{AhAhAhAh}Ah}1{{}d}````{ce{}{}}0{{{Eb{c}}}{{Fn{c}}}{}}{cc{}}`2{c{{Eb{c}}}{}};;:`````````````````{{Ah{Dh{Ah}}}G`}``{{AhAjAh}G`}0``5555{{GbDd}A`}4466``{AjG`}{Gdd}{{}G`}{{GbAh}G`}1{{AhAhAh}G`}{{AhAh}G`}{GdG`}{G`G`}7{GfG`}{{G`Gd}G`}7``{c{{h{e}}}{}{}}000{cj{}}0```````````````{{}b}{{{Fb{Gh}}}b}{ce{}{}}0``{{}{{An{{Fb{Gh}}}}}}{{}Gj}{{}Ah}{Gl{{Fb{Gh}}}}{Gdb}4{cc{}}```6`{{}Gn}``{{}H`}```:`{Hbb}`;`8`==<`993{AhHb}:```>>={{}Hb}```````{HdAh}<<<<<<<<<<`{{HdAh}b}{Hf{{Eb{Hd}}}}{Hh{{Eb{Hd}}}}{H`b}{Gnb};;;;;{GnAh}{ce{}{}}0000{Ah{{Fh{AhAh}}}}={{}Hd}={{Gnc}{}Hj}`{c{{h{e}}}{}{}}000000000{cj{}}0000```{{Hl{Fb{Gh}}}b}{{{Fb{Gh}}}b}7777{Hn{{Eb{Hl}}}}{Hl{{An{{Fb{Gh}}}}}}{{}{{An{{Fb{Gh}}}}}}{cc{}}0;;{{}Hl}`888877```<<<<{I`{{An{{Fb{Gh}}}}}}`3{{}Gj}{{}Ah}{Ib{{Eb{I`}}}}55{I`Hb}`{ce{}{}}0{{}I`}{{}b}{Hbb}8;{c{{h{e}}}{}{}}000{cj{}}0`````````555555{{GhGd}{{An{Ah}}}}`{IdId}{{ce}b{}{}}{{IdId}Bd}{{Gh{Al{Aj}}}b}`{{{Fb{Gh}}}{{Fb{Gh}}}}{cc{}}00{IfId}{IfGj}{GhAh}{IfAh}1``{Gh{{Fn{If}}}}{ce{}{}}00{IfBd}``{{{Al{Aj}}}Gh}`````2`{c{{h{e}}}{}{}}00000{cj{}}00```{{}Ah}00{{}b}``00```00`{{}d}0`0``{{AhAhAhAhAh}Gj}88{{GjDd}A`}?9```{{GjAh}b}``776`","D":"CHd","p":[[1,"unit"],[1,"never"],[5,"Arguments",853],[6,"Result",854],[5,"TypeId",855],[5,"Stdout",27],[1,"str"],[8,"Result",853],[5,"PanicInfo",856],[5,"APP_NAMES",38],[5,"Vec",857],[1,"usize"],[1,"u8"],[1,"slice"],[6,"Option",858],[5,"SimpleLogger",52],[5,"Metadata",859],[1,"bool"],[5,"Record",859],[5,"FrameTracker",213],[5,"String",860],[5,"PhysAddr",92],[5,"VirtAddr",92],[5,"PhysPageNum",92],[5,"VirtPageNum",92],[5,"SimpleRange",92],[10,"StepByOne",92],[10,"Copy",861],[10,"PartialEq",862],[10,"PartialOrd",862],[10,"Debug",853],[10,"Clone",863],[6,"Ordering",862],[5,"Formatter",853],[5,"PageTableEntry",403],[1,"array"],[5,"SimpleRangeIterator",92],[10,"FrameAllocator",213],[5,"StackFrameAllocator",213],[5,"FRAME_ALLOCATOR",213],[5,"UPSafeCell",516],[5,"Layout",864],[5,"MemorySet",267],[5,"MapPermission",267],[5,"MapArea",267],[5,"PageTable",403],[6,"MapType",267],[5,"KERNEL_SPACE",267],[5,"Arc",865],[17,"Item"],[10,"IntoIterator",866],[1,"tuple"],[10,"Hasher",867],[5,"PTEFlags",403],[5,"RefMut",868],[1,"isize"],[5,"TimeVal",549],[1,"i32"],[5,"TaskInfo",549],[5,"TaskControlBlock",758],[5,"TrapContext",836],[5,"INITPROC",584],[5,"KernelStack",647],[5,"PidHandle",647],[5,"TaskContext",634],[5,"RecycleAllocator",647],[5,"PID_ALLOCATOR",647],[5,"KSTACK_ALLOCATOR",647],[10,"Sized",861],[5,"TaskManager",703],[5,"TASK_MANAGER",703],[5,"Processor",727],[5,"PROCESSOR",727],[6,"TaskStatus",758],[5,"TaskControlBlockInner",758],[8,"VPNRange",92],[8,"FrameAllocatorImpl",213]],"r":[[64,213],[65,267],[66,267],[67,267],[68,267],[69,267],[70,403],[71,92],[72,92],[73,92],[74,92],[80,213],[88,267],[89,403],[90,403],[91,403],[513,516],[586,647],[587,647],[588,727],[591,634],[592,758],[593,703],[594,758],[599,703],[604,727],[605,727],[606,727],[609,703],[616,647],[619,647],[623,727],[625,727],[629,727],[821,836]],"b":[[147,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[149,"impl-From%3Cusize%3E-for-PhysAddr"],[150,"impl-From%3Cusize%3E-for-VirtAddr"],[152,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[153,"impl-From%3Cusize%3E-for-PhysPageNum"],[155,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[157,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[158,"impl-From%3Cusize%3E-for-VirtPageNum"],[323,"impl-Octal-for-MapPermission"],[324,"impl-LowerHex-for-MapPermission"],[325,"impl-Debug-for-MapPermission"],[326,"impl-Binary-for-MapPermission"],[327,"impl-UpperHex-for-MapPermission"],[446,"impl-UpperHex-for-PTEFlags"],[447,"impl-Binary-for-PTEFlags"],[448,"impl-Debug-for-PTEFlags"],[449,"impl-LowerHex-for-PTEFlags"],[450,"impl-Octal-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJMBZgAcAAIAIQAEACgAAwAyAAIANgADAD0AAwBCAAEATAAAAE4AAQBXAAAAXgAAAGQAAABmAAAAawALAHkAEwCPAAMAlAAAAJYAAQCZAAEAnAAAAJ4AAQCiAAAApgAAAK4ABgC3AAUAvgAXANcAAQDbABEA8wAAAPgAAAD6AAAA/AAKAAoBAAAMAQEAFwEAABsBAQAiAQAAJQEOADcBAQA6AQIAPgEKAE4BAABUAQEAYQECAGUBAQBqAQEAcQEBAHUBAwB8AQEAgQEOAJEBBQCaAQQApQEAAKkBCgC5AQAAuwEAAL8BBQDLAQAAzQEAANsBAADfAQAA5AEBAO0BCAD5AQMABgIBAA0CAgAiAgIAJwIFADECAAAzAgAANQIAADcCAAA7AgAAQgIGAFYCAABZAgEAYAIAAG8CAAB4AgIAfAIBAIQCAgCIAgAAigIAAIwCEwCtAgAAsAIPAMICAADFAgQA0QIHANoCBADkAgAA8AIFAPoCAAD/AgUABwMCABADAAAbAwAAJAMAACYDCAA9AwEARwMCAFIDAgA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
